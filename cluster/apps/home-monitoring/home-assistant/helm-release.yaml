---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    env:
      TZ: "${TIMEZONE}"
    metrics:
      enabled: true
      serviceMonitor:
        bearerTokenSecret:
          name: prometheus-access-token
          key: token
    persistence:
      config:
        enabled: true
        size: 15Gi
      ha-configuration:
        enabled: true
        type: configMap
        name: ha-configuration
        mountPath: /config/init_config/
        readOnly: true
    image:
      repository: ghcr.io/home-assistant/home-assistant
      tag: 2022.12.7
    initContainers:
      update-hacs:
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            set -x
            # renovate: githubProject=hacs/integration
            VERSION=1.29.0
            HA_PATH="/config"

            # Skip setup on first run
            HA_CONFIG_FILE="$HA_PATH/configuration.yaml"
            if ! [ -f "$HA_CONFIG_FILE" ]
            then
              echo "Config file $HA_CONFIG_FILE does not exist (probably first run), exiting..."
              exit 0
            fi

            HACS_DIR="$HA_PATH/custom_components/hacs"
            mkdir -pv "$HACS_DIR"

            # Check the installed version
            HACS_VERSION_FILE="$HACS_DIR/version.txt"
            # if the file exists and the version matches, exit
            if ([ -f "$HACS_VERSION_FILE" ] && [ "$VERSION" == $(cat "$HACS_VERSION_FILE") ])
            then
              echo "HACS version v$VERSION is already installed, exiting..."
              exit 0
            fi

            echo "Installing HACS version v$VERSION to $HACS_DIR..."
            rm -rf "$HACS_DIR/*"
            DOWNLOADED_FILE_PATH="/tmp/hacs.zip"
            wget "https://github.com/hacs/integration/releases/download/$VERSION/hacs.zip" -O "$DOWNLOADED_FILE_PATH"
            unzip "$DOWNLOADED_FILE_PATH" -d "$HACS_DIR" > /dev/null
            rm "$DOWNLOADED_FILE_PATH"
            echo "$VERSION" > "$HACS_VERSION_FILE"
            echo "Installation complete"
        volumeMounts:
          - name: config
            mountPath: /config/
      load-configuration:
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
          - "sh"
          - "-c"
          - |
            set -x

            # Skip setup on first run
            HA_CONFIG_FILE="/config/configuration.yaml"
            if ! [ -f "$HA_CONFIG_FILE" ]
            then
              echo "Config file $HA_CONFIG_FILE does not exist (probably first run), exiting..."
              exit 0
            fi

            # Replace the content between the markers with a HA load command
            echo "Updating config to include init_config directory contents..."
            BLOCK_PREFIX=$(sed -n '/#START_MARKER/q;p' "$HA_CONFIG_FILE")
            BLOCK_SUFFIX=$(sed '1,/#END_MARKER/ d' "$HA_CONFIG_FILE")
            INIT_CONFIG_CONTENTS=$(cat /config/init_config/*)
            echo "$BLOCK_PREFIX" > "$HA_CONFIG_FILE"
            echo "#START_MARKER" >> "$HA_CONFIG_FILE"
            echo "$INIT_CONFIG_CONTENTS" >> "$HA_CONFIG_FILE"
            echo "#END_MARKER" >> "$HA_CONFIG_FILE"
            echo "$BLOCK_SUFFIX" >> "$HA_CONFIG_FILE"
            echo "Home-Assistant config updated"
        volumeMounts:
          - name: config
            mountPath: /config/
          - name: ha-configuration
            mountPath: /config/init_config/
        securityContext:
          runAsUser: 0
    ingress:
      main:
        enabled: true
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-traefik-forward-auth@kubernetescrd
        hosts:
          - host: home-assistant.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
          - host: ha.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: home-assistant-${SECRET_DOMAIN/./-}-tls
            hosts:
              - home-assistant.${SECRET_DOMAIN}
              - ha.${SECRET_DOMAIN}
